class ToggleHeight{constructor(a){Array.isArray(a)||(a=[a]),this.configs=a.map(a=>({...a,parents:[],rotateElements:[],triggers:[],targets:[],touchStartY:0,currentOpenIndex:null,fontSizeMultiplier:a.fontSizeMultiplier===void 0?1:a.fontSizeMultiplier,expandedRotation:a.expandedRotation===void 0?90:a.expandedRotation})),this.domContentLoadedHandler=this.domContentLoadedHandler.bind(this),document.addEventListener("DOMContentLoaded",this.domContentLoadedHandler)}getRootFontSize(){const a=window.getComputedStyle(document.documentElement).fontSize;return parseFloat(a)}getCollapsedHeight(a){const b=this.getRootFontSize(),c=b*a.fontSizeMultiplier;return`${c}px`}domContentLoadedHandler(){this.configs.forEach(a=>this.initConfig(a)),document.removeEventListener("DOMContentLoaded",this.domContentLoadedHandler),this.onWindowResize=this.onWindowResize.bind(this),window.addEventListener("resize",this.onWindowResize)}initConfig(a){const{parentSelector:d="",triggerSelector:b,targetSelector:c,rotateSelector:e="",isOpen:f=!1,duration:g=300,closeOthers:h=!0,easingMode:i="ease",fontSizeMultiplier:j=1,expandedRotation:k=90}=a;return b&&c?void(a.parents=d?document.querySelectorAll(d):[document],a.duration=g,a.closeOthers=h,a.easingMode=i,a.fontSizeMultiplier=j,a.expandedRotation=k,a.parents.forEach(d=>{const f=d.querySelectorAll(b),g=d.querySelectorAll(c),h=e?d.querySelectorAll(e):[];a.triggers.push(...f),a.targets.push(...g),a.rotateElements.push(...h)}),a.triggers.forEach((b,c)=>{const d=a.targets[c]||b,g=a.rotateElements[c]||null;this.initElement(d,a),f&&(g&&this.rotate(g,a.expandedRotation,a.duration,a.easingMode),a.currentOpenIndex=c),b.addEventListener("click",()=>this.handleToggle(c,d,g,a)),b.addEventListener("touchstart",b=>{a.touchStartY=b.touches[0].clientY}),b.addEventListener("touchend",b=>{const e=b.changedTouches[0].clientY;10>Math.abs(e-a.touchStartY)&&(b.preventDefault(),this.handleToggle(c,d,g,a))})})):void console.error("triggerSelector und targetSelector sind in ToggleHeightConfig erforderlich.")}initElement(a,b){a.style.overflow="hidden",a.style.transition=`height ${b.duration}ms ${b.easingMode}`,a.style.height=b.isOpen?`${a.scrollHeight}px`:this.getCollapsedHeight(b)}handleToggle(a,b,c,d){const e=parseFloat(this.getCollapsedHeight(d)),f=parseFloat(b.style.height);if(d.closeOthers&&null!==d.currentOpenIndex&&d.currentOpenIndex!==a){const a=d.targets[d.currentOpenIndex],b=d.rotateElements[d.currentOpenIndex]||null;this.collapse(a,b,d)}f<=e?(this.expand(b,c,d),d.closeOthers&&(d.currentOpenIndex=a)):(this.collapse(b,c,d),d.closeOthers&&(d.currentOpenIndex=null))}expand(a,b,c){a.style.transition=`height ${c.duration}ms ${c.easingMode}`,a.style.height=`${a.scrollHeight}px`,b&&this.rotate(b,c.expandedRotation,c.duration,c.easingMode)}collapse(a,b,c){a.style.transition=`height ${c.duration}ms ${c.easingMode}`,a.style.height=this.getCollapsedHeight(c),b&&this.rotate(b,0,c.duration,c.easingMode)}rotate(a,b,c,d){a.style.transition=`transform ${c}ms ${d}`,a.style.transform=`rotate(${b}deg)`}onWindowResize(){this.configs.forEach(a=>{const b=this.getCollapsedHeight(a);a.targets.forEach((c,d)=>{const e=a.rotateElements[d]||null,f=parseFloat(c.style.height)>parseFloat(b);if(f){const a=c.style.transition;c.style.transition="none",c.style.height=`${c.scrollHeight}px`,c.offsetHeight,c.style.transition=a}else c.style.transition="height 0ms",c.style.height=b,c.offsetHeight,c.style.transition=`height ${a.duration}ms ${a.easingMode}`})})}}window.ToggleHeight=ToggleHeight;