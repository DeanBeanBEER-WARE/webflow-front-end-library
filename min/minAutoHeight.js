class ToggleHeight{constructor(t){Array.isArray(t)||(t=[t]),this.configs=t.map(t=>({...t,parents:[],rotateElements:[],triggers:[],targets:[],touchStartY:0,currentOpenIndex:null,fontSizeMultiplier:void 0!==t.fontSizeMultiplier?t.fontSizeMultiplier:1,expandedRotation:void 0!==t.expandedRotation?t.expandedRotation:90})),this.domContentLoadedHandler=this.domContentLoadedHandler.bind(this),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",this.domContentLoadedHandler):this.domContentLoadedHandler()}getRootFontSize(){return parseFloat(window.getComputedStyle(document.documentElement).fontSize)}getCollapsedHeight(t){const e=this.getRootFontSize()*t.fontSizeMultiplier;return`${e}px`}domContentLoadedHandler(){this.configs.forEach(t=>this.initConfig(t)),document.removeEventListener("DOMContentLoaded",this.domContentLoadedHandler),this.onWindowResize=this.onWindowResize.bind(this),window.addEventListener("resize",this.onWindowResize)}initConfig(t){const{parentSelector:e="",triggerSelector:n,targetSelector:i,rotateSelector:s="",isOpen:o=!1,duration:r=300,closeOthers:l=!0,easingMode:a="ease",fontSizeMultiplier:h=1,expandedRotation:d=90}=t;if(!n||!i)return void console.error("triggerSelector and targetSelector are required in ToggleHeightConfig.");e?t.parents=document.querySelectorAll(e):t.parents=[document],t.duration=r,t.closeOthers=l,t.easingMode=a,t.fontSizeMultiplier=h,t.expandedRotation=d,t.parents.forEach(e=>{const o=e.querySelectorAll(n),r=e.querySelectorAll(i),l=s?e.querySelectorAll(s):[];t.triggers.push(...o),t.targets.push(...r),t.rotateElements.push(...l)}),t.triggers.forEach((e,n)=>{const i=t.targets[n]||e,s=t.rotateElements[n]||null;this.initElement(i,t),o&&(s&&this.rotate(s,t.expandedRotation,t.duration,t.easingMode),t.currentOpenIndex=n),e.addEventListener("click",()=>this.handleToggle(n,i,s,t)),e.addEventListener("touchstart",e=>{t.touchStartY=e.touches[0].clientY}),e.addEventListener("touchend",e=>{const o=e.changedTouches[0].clientY;Math.abs(o-t.touchStartY)<10&&(e.preventDefault(),this.handleToggle(n,i,s,t))})})}initElement(t,e){t.style.overflow="hidden",t.style.transition=`height ${e.duration}ms ${e.easingMode}`,e.isOpen?t.style.height=`${t.scrollHeight}px`:t.style.height=this.getCollapsedHeight(e)}handleToggle(t,e,n,i){const s=parseFloat(this.getCollapsedHeight(i)),o=parseFloat(e.style.height),r=o<=s;if(i.closeOthers&&null!==i.currentOpenIndex&&i.currentOpenIndex!==t){const t=i.targets[i.currentOpenIndex],e=i.rotateElements[i.currentOpenIndex]||null;this.collapse(t,e,i)}r?(this.expand(e,n,i),i.closeOthers&&(i.currentOpenIndex=t)):(this.collapse(e,n,i),i.closeOthers&&(i.currentOpenIndex=null))}expand(t,e,n){t.style.transition=`height ${n.duration}ms ${n.easingMode}`,t.style.height=`${t.scrollHeight}px`,e&&this.rotate(e,n.expandedRotation,n.duration,n.easingMode)}collapse(t,e,n){t.style.transition=`height ${n.duration}ms ${n.easingMode}`,t.style.height=this.getCollapsedHeight(n),e&&this.rotate(e,0,n.duration,n.easingMode)}rotate(t,e,n,i){t.style.transition=`transform ${n}ms ${i}`,t.style.transform=`rotate(${e}deg)`}onWindowResize(){this.configs.forEach(t=>{const e=this.getCollapsedHeight(t);t.targets.forEach((n,i)=>{const s=t.rotateElements[i]||null,o=parseFloat(n.style.height)>parseFloat(e);if(o){const t=n.style.transition;n.style.transition="none",n.style.height=`${n.scrollHeight}px`,n.offsetHeight,n.style.transition=t}else n.style.transition="height 0ms",n.style.height=e,n.offsetHeight,n.style.transition=`height ${t.duration}ms ${t.easingMode}`})})}}window.ToggleHeight=ToggleHeight;
