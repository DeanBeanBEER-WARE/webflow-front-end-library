(function(a){a.ScrollManager=class a{constructor(a){this.options=a,this.handleWheel=this.handleWheel.bind(this),this.handleTouchStart=this.handleTouchStart.bind(this),this.handleTouchMove=this.handleTouchMove.bind(this),this.handleTouchEnd=this.handleTouchEnd.bind(this),this.handleEvent=this.handleEvent.bind(this),this.animateScroll=this.animateScroll.bind(this),this.debounceTimeout=null,this.debounceDelay=50,this.scrollSpeed=a.scrollSpeed||100,this.smoothScrollFactor=a.smoothScrollFactor||50,this.pageWrapperId=a.pageWrapper||"pagewrapper",this.easingMode=a.easingMode||"ease",this.checkEvent=a.checkEvent||"scroll",this.hoverTriggers=a.hoverTriggers||[],this.triggerElements=a.triggerElements||[],this.conditionElementsIDs=a.conditionElements||[],this.conditionArray=a.conditionArray||[],this.maxCheckDuration=a.maxCheckDuration||1e3,this.numChecks=5,this.targetScroll=0,this.currentScroll=0,this.isAnimating=!1,this.startScroll=0,this.startTime=null,this.isTouching=!1,this.touchStartY=0,this.touchDeltaY=0,this.isScrollingEnabled=!0,this.easingFunctions={ease:this.ease,"ease-in":this.easeIn,"ease-out":this.easeOut,"ease-in-out":this.easeInOut},this.easingFunctions[this.easingMode]||(console.warn(`ScrollManager: Invalid easingMode "${this.easingMode}". Using "ease" as default.`),this.easingMode="ease"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{this.init(),this.observeMutations()}):(this.init(),this.observeMutations())}ease(a){return .5>a?4*a*a*a:1-Math.pow(-2*a+2,3)/2}easeIn(a){return a*a*a}easeOut(a){return 1-Math.pow(1-a,3)}easeInOut(a){return .5>a?4*a*a*a:1-Math.pow(-2*a+2,3)/2}init(){return this.pageWrapper=document.getElementById(this.pageWrapperId),this.pageWrapper?void(document.body.style.overflow="hidden",this.pageWrapper.style.position="fixed",this.pageWrapper.style.top="0",this.pageWrapper.style.left="0",this.pageWrapper.style.width="100%",this.pageWrapper.style.height="100%",this.pageWrapper.style.overflow="hidden",this.currentScroll=this.pageWrapper.scrollTop,this.targetScroll=this.currentScroll,window.addEventListener("wheel",this.handleWheel,{passive:!1}),this.pageWrapper.addEventListener("touchstart",this.handleTouchStart,{passive:!1}),this.pageWrapper.addEventListener("touchmove",this.handleTouchMove,{passive:!1}),this.pageWrapper.addEventListener("touchend",this.handleTouchEnd,{passive:!1}),this.conditionElements=this.conditionElementsIDs.map((a,b)=>{const c=document.getElementById(a);return c||console.warn(`ScrollManager: Condition element at index ${b} (ID: '${a}') is not defined.`),c}),this.setupToggleEventListeners(),this.checkConditions()):void console.error(`ScrollManager: Element with ID "${this.pageWrapperId}" not found.`)}setupToggleEventListeners(){switch(this.checkEvent){case"scroll":window.addEventListener("scroll",this.handleEvent);break;case"click":document.addEventListener("click",this.handleEvent);break;case"hover":this.hoverTriggers.forEach(a=>{const b=document.getElementsByClassName(a);Array.from(b).forEach(a=>{a.addEventListener("mouseenter",this.handleEvent),a.addEventListener("mouseleave",this.handleEvent)})});break;default:console.warn(`ScrollManager: Unknown checkEvent '${this.checkEvent}'.`);}}enableScroll(){this.isScrollingEnabled||(this.isScrollingEnabled=!0,document.body.style.overflow="hidden",this.pageWrapper.style.overflow="hidden")}disableScroll(){this.isScrollingEnabled&&(this.isScrollingEnabled=!1,document.body.style.overflow="",this.pageWrapper.style.overflow="")}handleWheel(a){if(this.isScrollingEnabled){a.preventDefault();0<a.deltaY?"down":"up";this.targetScroll+=0<a.deltaY?this.scrollSpeed:-this.scrollSpeed;const b=this.pageWrapper.scrollHeight-window.innerHeight;this.targetScroll=Math.max(0,Math.min(this.targetScroll,b)),this.isAnimating||(this.isAnimating=!0,this.startTime=null,this.startScroll=this.pageWrapper.scrollTop,requestAnimationFrame(this.animateScroll))}}handleTouchStart(a){1!==a.touches.length||(this.isTouching=!0,this.touchStartY=a.touches[0].clientY,this.touchDeltaY=0)}handleTouchMove(a){if(this.isTouching&&1===a.touches.length){const b=a.touches[0].clientY;this.touchDeltaY=this.touchStartY-b,this.targetScroll+=this.touchDeltaY;const c=this.pageWrapper.scrollHeight-window.innerHeight;this.targetScroll=Math.max(0,Math.min(this.targetScroll,c)),this.touchStartY=b,this.isAnimating||(this.isAnimating=!0,this.startTime=null,this.startScroll=this.pageWrapper.scrollTop,requestAnimationFrame(this.animateScroll))}}handleTouchEnd(){this.isTouching&&(this.isTouching=!1)}animateScroll(a){this.startTime||(this.startTime=a);const b=a-this.startTime,c=1e3*(this.smoothScrollFactor/100),d=Math.min(b/c,1),e=this.easingFunctions[this.easingMode],f=e(d);this.currentScroll=this.startScroll+(this.targetScroll-this.startScroll)*f,this.pageWrapper.scrollTop=this.currentScroll,1>d?requestAnimationFrame(this.animateScroll):(this.currentScroll=this.targetScroll,this.pageWrapper.scrollTop=this.currentScroll,this.isAnimating=!1)}handleEvent(){this.checkConditions(),clearTimeout(this.debounceTimeout),this.debounceTimeout=setTimeout(()=>{this.checkConditions()},this.debounceDelay);const a=Math.round(this.maxCheckDuration/this.numChecks);for(let b=1;b<=this.numChecks;b++){const c=a*b;setTimeout(()=>{this.checkConditions()},c)}}checkConditions(){let a=!1,b=!1;this.conditionArray.forEach(c=>{const{conditionAttribute:d,conditionActive:e,conditionDisable:f}=c;this.conditionElements.forEach(c=>{if(!(c instanceof Element))return void console.warn(`ScrollManager: Condition element is not defined or not an Element.`);const g=window.getComputedStyle(c),h=g.getPropertyValue(d).trim();this.compareValues(h,f)?b=!0:this.compareValues(h,e)&&(a=!0)})}),b?this.disableScroll():a&&this.enableScroll()}compareValues(a,b){const c=parseFloat(a),d=parseFloat(b);return c===d}observeMutations(){const a=this.conditionArray.map(a=>a.conditionAttribute),b={attributes:!0,attributeFilter:a};this.conditionElements.forEach(a=>{if(a instanceof Element){const c=new MutationObserver(a=>{for(let b of a)"attributes"===b.type&&this.checkConditions()});c.observe(a,b)}else console.warn(`ScrollManager: Condition element is not defined or not an Element. MutationObserver not set up.`)})}}})(window);